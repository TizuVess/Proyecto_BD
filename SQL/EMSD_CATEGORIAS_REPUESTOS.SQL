--CREACION TABLA
CREATE TABLE EMSD_CATEGORIAS_REPUESTOS(
    COD_CATEGORIA NUMBER,
    NOMBRE_CATEGORIA VARCHAR2(50),
    CONSTRAINT PK_EMSD_CATEGORIAS_REPUESTOS PRIMARY KEY(COD_CATEGORIA)
);

--SECUENCIA TABLA
CREATE SEQUENCE SEQ_EMSD_CATEGORIAS_REPUESTOS
START WITH 1
INCREMENT BY 1
CACHE 200
NOCYCLE;

--TRIGGERS (CONTROLA NOMBRES Y CODIGO EN NULO Y NOMBRE EN MINUSCULA VOLVIENDOLO MAYUSCULA)
CREATE OR REPLACE TRIGGER TRG_EMSD_CATEGORIA_REPUESTOS 
BEFORE INSERT 
ON EMSD_CATEGORIA_RESPUESTOS
FOR EACH ROW
BEGIN
  IF :NEW.COD_CATEGORIA IS NULL THEN
    :NEW.COD_CATEGORIA := SEQ_EMSD_CATEGORIAS_REPUESTOS.NEXTVAL;
  END IF;
  IF :NEW.NOMBRE_CATEGORIA IS NULL THEN
    RAISE_APPLICATION_ERROR(-20001, 'El nombre de la categoría no puede estar vacío.');
  END IF;
  :NEW.NOMBRE_CATEGORIA := UPPER(:NEW.NOMBRE_CATEGORIA);
END;


CREATE OR REPLACE PROCEDURE PR_CATEGORIA_RESPUESTOS_CRUD (
  P_OPERACION VARCHAR2, -- Tipo de operación: 'INSERT', 'UPDATE', 'DELETE'
  P_COD_CATEGORIA NUMBER, 
  P_NOMBRE_CATEGORIA VARCHAR2 
)
IS
BEGIN
  LOCK TABLE EMSD_CATEGORIA_RESPUESTOS IN ROW EXCLUSIVE MODE;
  IF(UPPER(OPCION) = 'INSERT') THEN
    INSERT INTO EMSD_CATEGORIA_RESPUESTOS (COD_CATEGORIA, NOMBRE_CATEGORIA)
    VALUES (P_COD_CATEGORIA, P_NOMBRE_CATEGORIA);
  END IF;
  IF(UPPER(OPCION) = 'UPDATE') THEN
    UPDATE EMSD_CATEGORIA_RESPUESTOS
    SET NOMBRE_CATEGORIA = P_NOMBRE_CATEGORIA
    WHERE COD_CATEGORIA = P_COD_CATEGORIA;
  END IF;
  IF(UPPER(OPCION) = 'DELETE') THEN
    DELETE FROM EMSD_CATEGORIA_RESPUESTOS
    WHERE COD_CATEGORIA = P_COD_CATEGORIA;
  END IF;
  COMMIT;
  EXCEPTION
      WHEN STORAGE_ERROR THEN
          RAISE_APPLICATION_ERROR(-6500, 'Fallo de memoria');
      WHEN NO_DATA_FOUND THEN
          RAISE_APPLICATION_ERROR(+100, 'No encontramos esos datos, saludos');
      WHEN OTHERS THEN
          RAISE_APPLICATION_ERROR(-20010, 'Uh, fallé, saludos. :)');
  ROLLBACK;
END;


