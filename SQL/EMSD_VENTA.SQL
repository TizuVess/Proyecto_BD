CREATE TABLE EMSD_VENTA(
    COD_VENTA NUMBER,
    COD_REPUESTO NUMBER,
    COD_CLIENTE NUMBER,
    CONSTRAINT PK_EMSD_VENTA PRIMARY KEY(COD_VENTA),
    CONSTRAINT FK_EMSD_VENTA_REPUESTOS FOREIGN KEY(COD_REPUESTO) REFERENCES EMSD_REPUESTOS(COD_REPUESTO),
    CONSTRAINT FK_EMSD_VENTA_CLIENTES FOREIGN KEY(COD_CLIENTE) REFERENCES EMSD_CLIENTES(COD_CLIENTE)
);
--SECUENCIA
CREATE SEQUENCE SEQ_PK_VENTA
START WITH 1
INCREMENT BY 1
CACHE 200
NOCYCLE;


------PROCEDIMIENTO ALMACENADO
CREATE OR REPLACE PROCEDURE CRUD_VENTA(
    COD_VENTA_P NUMBER,
    COD_REPUESTO_P NUMBER,
    COD_CLIENTE_P NUMBER
)
IS 
BEGIN
    LOCK TABLE EMSD_VENTA IN ROW EXCLUSIVE MODE;
    IF (UPPER(OPCION)='R') THEN
        INSERT INTO EMSD_VENTA(VIN_VEHICULO, COD_CLIENTE, COD_MARCA_VEHICULO, /*COD_MODELO_VEHICULO,*/ COD_ANIO_FABRICACION, PATENTE)
            VALUES(VIN_P, COD_CLIENTE_P, COD_MARCA_P, COD_MODELO_P, COD_ANIO_P, PATENTE_P);
    END IF;
    IF (UPPER(OPCION)='U') THEN
        UPDATE EMSD_VEHICULOS SET
            COD_CLIENTE= COD_CLIENTE_P, 
            COD_MARCA_VEHICULO= COD_MARCA_P,
            --COD_MODELO_VEHICULO= COD_MODELO_P, 
            COD_ANIO_FABRICACION= COD_ANIO_P, 
            PATENTE= PATENTE_P
        WHERE(VIN_VEHICULO=VIN_P);
    END IF;
    IF (UPPER(OPCION)='D') THEN
        DELETE FROM EMSD_VEHICULOS
        WHERE (VIN_VEHICULO=VIN_P);
    END IF;
    COMMIT;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(+100, 'No tenemos registrado este vehículo');
        WHEN STORAGE_ERROR THEN
            RAISE_APPLICATION_ERROR(-6500, 'Fallo de memoria');
    ROLLBACK;
END;

--TRIGGER
CREATE OR REPLACE TRIGGER TR_VENTA
BEFORE INSERT
ON EMSD_VENTA
FOR EACH ROW
BEGIN
    IF (COD_REPUESTO IS NULL) THEN
        RAISE APPLICATION ERROR(-20005, 'No se agregó ningún producto como para poder efectuar la venta');
END;
    
