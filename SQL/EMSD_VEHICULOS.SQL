----------TABLA
CREATE TABLE EMSD_VEHICULOS(
    VIN_VEHICULO VARCHAR2(17),
    COD_CLIENTE NUMBER,
    COD_MARCA_VEHICULO NUMBER,
    COD_ANIO_FABRICACION NUMBER,
    COD_MODELO_VEHICULO NUMBER,
    PATENTE VARCHAR2(6),
    CONSTRAINT PK_EMSD_VEHICULOS PRIMARY KEY(VIN_VEHICULO),
    CONSTRAINT FK_EMSD_VEHICULOS_CLIENTES FOREIGN KEY(COD_CLIENTE) REFERENCES EMSD_CLIENTES(COD_CLIENTE),
    CONSTRAINT FK_EMSD_VEHICULOS_MARCAS_VEHICULOS FOREIGN KEY(COD_MARCA_VEHICULO) REFERENCES EMSD_MARCAS_VEHICULOS(COD_MARCA_VEHICULO),
    /*CONSTRAINT FK_EMSD_VEHICULOS_MODELO_VEHICULO FOREIGN KEY(COD_MODELO_VEHICULO) REFERENCES EMSD_MODELO_VEHICULO(COD_MODELO_VEHICULO),*/
    CONSTRAINT FK_EMSD_VEHICULOS_ANIO_FABRICACION_VEHICULO FOREIGN KEY(COD_ANIO_FABRICACION) REFERENCES EMSD_ANIO_FABRICACION_VEHICULO(COD_ANIO_FABRICACION)
);


------PROCEDIMIENTO ALMACENADO
CREATE OR REPLACE PROCEDURE CRUD_VEHICULOS_(
    OPCION VARCHAR2,
    VIN_P VARCHAR2,
    COD_CLIENTE_P NUMBER,
    COD_MARCA_P NUMBER,
    --COD_MODELO_P NUMBER,
    COD_ANIO_P NUMBER,
    PATENTE_P VARCHAR2
)
IS 
BEGIN
    LOCK TABLE EMSD_VEHICULOS IN ROW EXCLUSIVE MODE;
    IF (UPPER(OPCION)='R') THEN
        INSERT INTO EMSD_VEHICULOS(VIN_VEHICULO, COD_CLIENTE, COD_MARCA_VEHICULO, /*COD_MODELO_VEHICULO,*/ COD_ANIO_FABRICACION, PATENTE)
            VALUES(VIN_P, COD_CLIENTE_P, COD_MARCA_P, COD_MODELO_P, COD_ANIO_P, PATENTE_P);
    END IF;
    IF (UPPER(OPCION)='U') THEN
        UPDATE EMSD_VEHICULOS SET
            COD_CLIENTE= COD_CLIENTE_P, 
            COD_MARCA_VEHICULO= COD_MARCA_P,
            --COD_MODELO_VEHICULO= COD_MODELO_P, 
            COD_ANIO_FABRICACION= COD_ANIO_P, 
            PATENTE= PATENTE_P
        WHERE(VIN_VEHICULO=VIN_P);
    END IF;
    IF (UPPER(OPCION)='D') THEN
        DELETE FROM EMSD_VEHICULOS
        WHERE (VIN_VEHICULO=VIN_P);
    END IF;
    COMMIT;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(+100, 'No tenemos registrado este veh√≠culo');
        WHEN STORAGE_ERROR THEN
            RAISE_APPLICATION_ERROR(-6500, 'Fallo de memoria');
    ROLLBACK;
END;

-----------------TRIGGER
CREATE OR REPLACE TRIGGER EMSD_VEHICULOS
BEFORE INSERT
ON EMSD_VEHICULOS
FOR EACH ROW
BEGIN

    
END;
