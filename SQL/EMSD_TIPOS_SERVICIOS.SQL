CREATE TABLE EMSD_TIPOS_SERVICIO(
	COD_TIPO_SERVICIO NUMBER,
	NOMBRE_TIPO_SERVICIO VARCHAR2(100),
	DESCRIPCION_TIPO_SERVICIO VARCHAR2(600),
	CONSTRAINT PK_EMSD_TIPOS_SERVICIO PRIMARY KEY(COD_TIPO_SERVICIO)
)

CREATE OR REPLACE TRIGGER EMSD_TIPOS_SERVICIO
BEFORE INSERT
ON EMSD_TIPOS_SERVICIO
FOR EACH ROW
BEGIN
	SELECT MAX(COD_TIPO_SERVICIO)+1 INTO :NEW.COD_TIPO_SERVICIO
	FROM EMSD_TIPOS_SERVICIO;
	IF(:NEW.COD_TIPO_SERVICIO IS NULL)THEN
		:NEW.COD_TIPO_SERVICIO := 1;
	END IF;
END;

CREATE OR REPLACE PROCEDURE EMSD_TIPOS_SERVICIOS_CRUD(
	P_OPCION VARCHAR2,
	P_COD_TIPO_SERVICIO NUMBER,
	P_NOMBRE_TIPO_SERVICIO VARCHAR2,
	P_DESCRIPCION_TIPO_SERVICIO VARCHAR2
)
IS 
BEGIN
    LOCK TABLE EMSD_TIPOS_SERVICIO IN ROW EXCLUSIVE MODE;
    IF (UPPER(P_OPCION) = 'INSERT') THEN
        INSERT INTO EMSD_TIPOS_SERVICIO(COD_TIPO_SERVICIO, NOMBRE_TIPO_SERVICIO, DESCRIPCION_TIPO_SERVICIO)
            VALUES(P_COD_TIPO_SERVICIO, P_NOMBRE_TIPO_SERVICIO, P_DESCRIPCION_TIPO_SERVICIO);
    END IF;
    IF (UPPER(P_OPCION) = 'UPDATE') THEN
        UPDATE EMSD_TIPOS_SERVICIO SET
            NOMBRE_TIPO_SERVICIO = P_NOMBRE_TIPO_SERVICIO,
            DESCRIPCION_TIPO_SERVICIO = P_DESCRIPCION_TIPO_SERVICIO
        WHERE(COD_TIPO_SERVICIO=P_COD_TIPO_SERVICIO);
    END IF;
    IF (UPPER(P_OPCION) = 'DELETE') THEN
        DELETE FROM EMSD_TIPOS_SERVICIO
        WHERE (COD_TIPO_SERVICIO=P_COD_TIPO_SERVICIO);
    END IF;
    COMMIT;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(+100, 'No est√° registrado este tipo de servicio');
        WHEN STORAGE_ERROR THEN
            RAISE_APPLICATION_ERROR(-6500, 'Fallo de memoria');
    ROLLBACK;
END;
