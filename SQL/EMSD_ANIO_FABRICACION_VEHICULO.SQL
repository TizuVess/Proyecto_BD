CREATE TABLE EMSD_ANIO_FABRICACION_VEHICULO(
    COD_ANIO_FABRICACION NUMBER,
    ANIO_FABRICACION DATE,
    CONSTRAINT PK_EMSD_ANIO_FABRICACION_VEHICULO PRIMARY KEY(COD_ANIO_FABRICACION)
);

--SECUENCIA TABLA
CREATE SEQUENCE SEQ_EMSD_ANIO_FABRICACION_VEHICULO
START WITH 1
INCREMENT BY 1
CACHE 200
NOCYCLE;

--TRIGGERS ()
CREATE OR REPLACE TRIGGER TRG_EMSD_ANIO_FABRICACION_VEHICULO
BEFORE INSERT 
ON EMSD_ANIO_FABRICACION_VEHICULO
FOR EACH ROW
BEGIN
    IF :NEW.ANIO_FABRICACION IS NULL THEN
    RAISE_APPLICATION_ERROR(-20001, 'El año de fabricación no puede estar vacío.');
    END IF;
END;

CREATE OR REPLACE PROCEDURE PR_ANIO_FABRICACION_VEHICULO_CRUD (
    ANIO_FABRICACION_P DATE
) AS
BEGIN
    INSERT INTO EMSD_ANIO_FABRICACION_VEHICULO (COD_ANIO_FABRICACION,ANIO_FABRICACION)
    VALUES (SEQ_EMSD_ANIO_FABRICACION_VEHICULO.NEXTVAL, ANIO_FABRICACION_P);
    COMMIT;
    EXCEPTION
        WHEN STORAGE_ERROR THEN
            RAISE_APPLICATION_ERROR(-6500, 'Fallo de memoria');
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(+100, 'No encontramos esos datos, saludos');
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20010, 'Uh, fallé, saludos. :)');
    ROLLBACK;
END;
